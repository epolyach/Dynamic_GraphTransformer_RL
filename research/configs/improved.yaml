# Improved Configuration for Statistically Stable Results
# Addresses the issue of too-small performance differences

# Experimental settings
experiment:
  name: "improved_cvrp_comparison"
  random_seed: 42
  device: "cpu"

# Working directory
working_dir_path: "results/improved"

# Problem configuration - INCREASED COMPLEXITY
problem:
  num_customers: 50        # vs 20 in small.yaml - more complex routing
  vehicle_capacity: 50     # vs 30 in small.yaml - proportional scaling
  coord_range: 100         # keep same for consistency
  demand_range: [1, 15]    # vs [1, 10] - slightly higher variance

# Model architecture - ENHANCED FOR LARGER PROBLEMS
model:
  input_dim: 3
  hidden_dim: 128          # vs 96 - larger for more complex problems
  num_heads: 8             # vs 4 - more attention heads for complexity
  num_layers: 4            # vs 3 - deeper networks for larger problems
  transformer_dropout: 0.15 # vs 0.1 - slightly more regularization
  feedforward_multiplier: 3  # vs 2 - more capacity
  edge_embedding_divisor: 4  # keep same

# Training configuration - IMPROVED STABILITY
training:
  num_instances: 4096      # vs 2048 - double the training data
  batch_size: 64           # vs 32 - larger batches for stability
  train_val_split: 0.8     # keep same
  num_epochs: 96           # vs 64 - longer training for convergence
  validation_frequency: 6  # vs 4 - more frequent validation
  learning_rate: 0.0003    # vs 0.001 - slower for stability
  patience: 20             # vs 10 - more patience for complex problems

# Enhanced RL configuration
reinforcement_learning:
  entropy_weight: 0.025    # vs 0.01 - more exploration
  clip_norm: 2.0          # gradient clipping for stability
  advantage_normalization: true  # normalize advantages

# Temperature annealing for better exploration-exploitation
inference:
  default_temperature: 1.5     # vs 1.0 - start higher
  temperature_schedule:
    type: "exponential_decay"
    initial: 2.0
    final: 0.8
    decay_rate: 0.98
  max_steps_multiplier: 3      # vs 2 - more steps for complex problems
  masked_score_value: -100.0   # keep same
  log_prob_epsilon: 1e-8       # keep same

# Cost configuration
cost:
  depot_penalty_per_visit: 0.0  # keep same
  
# Enhanced logging
logging:
  level: "INFO"
  format: "%(asctime)s - %(levelname)s - %(message)s"
  
# Multiple run configuration for statistical robustness
multi_run:
  enabled: true
  num_runs: 3              # Start with 3 runs for faster testing
  seeds: [42, 123, 456]    # Different seeds for each run
  
# Evaluation configuration
evaluation:
  num_test_instances: 500  # vs 100 - more evaluation instances
  exact_solver_samples: 200 # vs 100 - more exact baseline samples
  statistical_testing: true # Enable significance testing
